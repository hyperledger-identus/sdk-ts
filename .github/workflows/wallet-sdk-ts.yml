name: Release

concurrency:
  group: ${{ github.head_ref }}${{ github.ref }}-prism-enterprise-services

on:
  push:
    tags:
      - "prism-enterprise-services-*"
    branches:
      - "main"
    paths:
      - ".github/workflows/enterprise-services-release.yml"
      - ".github/workflows/enterprise-services-ci.yml"
      - "enterprise-services/**"

jobs:
  release:
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, 'chore(release)')
    env:
      GITHUB_ACTOR: ${{ secrets.ATALA_GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.ATALA_GITHUB_TOKEN }}
      ATALA_GITHUB_TOKEN: ${{ secrets.ATALA_GITHUB_TOKEN }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ATALA_GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - uses: crazy-max/ghaction-import-gpg@v5
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.ATALA_GITHUB_ACTOR }}
          password: ${{ secrets.ATALA_GITHUB_TOKEN }}

      - name: Release
        env:
          GIT_AUTHOR_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_COMMITTER_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_AUTHOR_NAME: ${{ steps.import_gpg.outputs.name }}
          GIT_COMMITTER_NAME: ${{ steps.import_gpg.outputs.name }}
        run: |
          cd enterprise-services
          npm install
          npx semantic-release -e semantic-release-monorepo

  deploy:
    if: startsWith(github.ref, 'refs/tags') && contains(github.event.head_commit.message, 'chore(release)')
    uses: ./.github/workflows/deploy-dev-env.yml
    with:
      component-tag: "${{ github.ref_name }}"
    secrets: inherit

  create-swagger-tag:
    if: startsWith(github.ref, 'refs/tags') && contains(github.event.head_commit.message, 'chore(release)')
    name: Create prism-enterprise-services-swagger tag
    runs-on: ubuntu-latest
    outputs:
      swagger-tag: ${{ steps.swagger-tag.outputs.COMPONENT_TAG }}

    steps:
      - name: Create tag
        id: swagger-tag
        run: |
          export ENTERPRISE_VERSION="${{ github.ref_name }}"
          export SWAGGER_TAG_VERSION="${ENTERPRISE_VERSION/services/services-swagger}"
          echo "COMPONENT_TAG=$SWAGGER_TAG_VERSION" >> "$GITHUB_OUTPUT"

  deploy-swagger:
    if: startsWith(github.ref, 'refs/tags') && contains(github.event.head_commit.message, 'chore(release)')
    uses: ./.github/workflows/deploy-dev-env.yml
    needs: create-swagger-tag
    with:
      component-tag: "${{ needs.create-swagger-tag.outputs.swagger-tag }}"
    secrets: inherit
